---
import type { Database } from '@/database.types'

import {
  BehanceLogo,
  DribbbleLogo,
  InstagramLogo,
} from '@prodkt/ui/brands/socials'
import { Button } from '@prodkt/ui/primitives/button'
import { BrandingShowcase } from '@prodkt/ui/prodkt-components/branding-showcase'
import { LogoButton } from '@prodkt/ui/prodkt-components/logo-button'
import { TechUsed } from '@prodkt/ui/prodkt-components/technology-used'

import PortfolioSlider from '@/components/portfolio-slider.astro'
import Layout from '@/layouts/PublicLayout.astro'

import { GET } from './index.json'

// type Files = Database['public']['Tables']['directus_files']['Row']
// type Work = Database['public']['Tables']['work']['Row'][]
// type Projects = Database['public']['Tables']['projects']['Row'][]

// interface Logos {
//   date_created: string | null
//   date_updated: string | null
//   id: string
//   logo: Files
//   logo_onDark: Files
//   logomark: Files
//   logomark_3dWireframe: Files
//   logomark_3dWireframe_onDark: Files
//   logomark_backgroundFill: Files
//   logomark_backgroundFill_onDark: Files
//   logomark_onDark: Files
//   logotype: Files
//   logotype_onDark: Files
//   sort: number | null
//   title: string | null
//   user_created: string | null
//   user_updated: string | null
// }
// interface WorkShowcase {
//   // ProjectDesignTokens: Json
//   content_block: string | null
//   date_created: string | null
//   date_updated: string | null
//   excerpt: string | null
//   id: string
//   is_brand_showcase: boolean | null
//   like: number
//   link_behance: string | null
//   link_dribbble: string | null
//   link_instagram: string | null
//   primary_color: string | null
//   primary_image: string | null
//   slug: string | null
//   sort: number | null
//   status: string
//   title: string | null
//   user_created: string | null
//   user_updated: string | null
//   project: {
//     base_type: string | null
//     base_type_sample: Files
//     brand_color_primary: string | null
//     code_type: string | null
//     code_type_sample: Files
//     component_animatedLogo_stroked: string | null
//     componentPath_animatedLogo_stroked: string | null
//     content_block: string | null
//     date_created: string | null
//     date_updated: string | null
//     excerpt: string | null
//     expressive_type: string | null
//     expressive_type_sample: Files
//     icon_radius: string | null
//     id: string
//     link_behance: string | null
//     link_dribbble: string | null
//     link_github: string | null
//     link_gitlab: string | null
//     link_instagram: string | null
//     logo: Files
//     logo_3d: Files
//     logo_creative: Files
//     logo_type: string | null
//     logo_type_sample: Files
//     logo_wireframe: Files
//     og_image: Files
//     primary_image: Files
//     public: boolean | null
//     slug: string
//     sort: number | null
//     status: string | null
//     title: string | null
//     user_created: string | null
//     user_updated: string | null
//     workspace: string | null
//     logos: Logos
//   }
// }

type TechnologyTypes = Database['public']['Tables']['technology']['Row'] & {
  logo: {
    filename_disk: string
    // other properties...
    id: string
    name: string | null
  }
  id: string | null
  technology_id: {
    logo: {
      filename_disk: string | undefined
      // other properties...
      id: string
      name: string | undefined
      // 'client:only'?: string // Optional if applicable
    }
    id: string | undefined
    name: string
  }
}

const response = await GET(Astro)
// biome-ignore lint/suspicious/noExplicitAny: <explanation>
const workData = (await response.json()) as any

// const ProjectLogo = workData.project?.logos?.logo.filename_disk
// const ProjectLogoOnDark = workData.project?.logo_onDark?.filename_disk
// console.log(ProjectLogo)

const link_behance = workData?.link_behance
const link_dribbble = workData?.link_dribbble
const link_instagram = workData?.link_instagram

const brandingShowcase = workData?.is_brand_showcase === true

const WorkProject = workData?.project?.title
const ProjectLogoWireframe = workData?.project?.logo_wireframe?.filename_disk
const ProjectLogo3d = workData?.project?.logo_3d?.filename_disk
const ProjectLogoCreative = workData?.project?.logo_creative?.filename_disk
const ProjectAnimatedLogo = workData?.project?.component_animatedLogo_stroked
const ProjectLogoType = workData?.project?.logo_type
const ProjectBaseType = workData?.project?.base_type
const ProjectExpressiveType = workData?.project?.expressive_type
const ProjectCodeType = workData?.project?.code_type
const ProjectLogoTypeSample = workData?.project?.logo_type_sample?.filename_disk
const ProjectBaseTypeSample = workData?.project?.base_type_sample?.filename_disk
const ProjectExpressiveTypeSample =
  workData?.project?.expressive_type_sample?.filename_disk
const ProjectCodeTypeSample = workData?.project?.code_type_sample?.filename_disk
---

<Layout>
  <div class='relative w-full h-fit'>
    {
      brandingShowcase ? (
        <>
          {/* @ts-ignore */}
          <div class='relative w-[calc(75%_-_80px)] h-full ml-auto top-28 '>
            <BrandingShowcase
              client:load
              ProjectDesignTokens={workData?.ProjectDesignTokens}
              ProjectCodeType={ProjectCodeType as string}
              ProjectCodeTypeSample={ProjectCodeTypeSample as string}
              ProjectLogo={
                workData?.workData[0]?.project.logos.logo
                  .filename_disk as string
              }
              WorkProject={WorkProject as string}
              ProjectLogo3d={ProjectLogo3d as string}
              ProjectExpressiveType={ProjectExpressiveType as string}
              ProjectExpressiveTypeSample={
                ProjectExpressiveTypeSample as string
              }
              ProjectLogoType={ProjectLogoType as string}
              ProjectLogoTypeSample={ProjectLogoTypeSample as string}
              ProjectLogoCreative={ProjectLogoCreative as string}
              ProjectLogoWireframe={ProjectLogoWireframe as string}
              ProjectAnimatedLogo={ProjectAnimatedLogo as string}
              ProjectBaseType={ProjectBaseType as string}
              ProjectBaseTypeSample={ProjectBaseTypeSample as string}
            />
          </div>
        </>
      ) : null
    }
    {
      workData?.templateFiles && brandingShowcase === false ? (
        <>
          {/* @ts-ignore */}
          <PortfolioSlider template={workData?.templateFiles} />
        </>
      ) : null
    }
    <div class='absolute pb-10 z-[4] w-1/5 h-full gap-8 top-28 left-16'>
      <div
        class='sticky flex flex-col items-start justify-start w-full gap-8 top-28 rounded-2xl'
      >
        <div
          class='bg-[var(--ghost-aa5)] backdrop-blur-md flex flex-col items-start justify-start gap-6 rounded-2xl w-full h-full bottom-0 top-0 border border-[var(--grayA4)]'
        >
          <div
            class='flex flex-col items-start justify-center w-full p-10 pb-0'
          >
            <img
              src={workData?.workData[0]?.project.logos.logo.filename_disk
                ? `https://odzdpcvclydcqawdagdt.supabase.co/storage/v1/object/public/prodkt/${workData?.workData[0]?.project.logos.logo.filename_disk}`
                : 'https://odzdpcvclydcqawdagdt.supabase.co/storage/v1/object/public/prodkt/1662d152-933f-414d-9230-c4b19c773557.avif'}
              alt={workData?.projectSlug ??
                workData?.projectSlug ??
                'Default Alt Text'}
              class='block h-10 max-w-32 dark:hidden'
            />
            <img
              src={workData?.workData[0]?.project.logos.logo_onDark
                .filename_disk
                ? `https://odzdpcvclydcqawdagdt.supabase.co/storage/v1/object/public/prodkt/${workData?.workData[0]?.project.logos.logo_onDark.filename_disk}`
                : 'https://odzdpcvclydcqawdagdt.supabase.co/storage/v1/object/public/prodkt/1662d152-933f-414d-9230-c4b19c773557.avif'}
              alt={workData?.projectSlug ??
                workData?.projectSlug ??
                'Default Alt Text'}
              class='hidden h-10 max-w-32 dark:flex'
            />
          </div>

          <div
            class='flex flex-col items-start justify-center w-full gap-2 px-10'
          >
            <h1 class='px-0 mr-auto text-lg text-left'>
              {workData?.title}
            </h1>
          </div>
          <div
            class='flex flex-col items-start justify-center w-full gap-2 px-10'
          >
            <h4
              class='font-mono text-xs uppercase tracking-widest text-[var(--grayA8)]'
            >
              Project
            </h4>
            <div class='flex flex-col items-center justify-start text-xs'>
              <h5 class='px-0 mr-auto text-lg text-left'>
                {workData?.project?.title}
              </h5>
              <a href={`/projects/${workData?.projectSlug}`}>
                <Button
                  variant='link'
                  className='px-0 text-xs underline underline-offset-4'
                  >Go to Project Page</Button
                >
              </a>
            </div>
          </div>
          <div
            class='flex flex-col items-start justify-center w-full gap-2 px-10'
          >
            <h4
              class='font-mono text-xs uppercase tracking-widest text-[var(--grayA8)]'
            >
              Technology
            </h4>
            <div class='flex flex-row items-center justify-start'>
              {
                workData?.technologyData?.map((techItem: TechnologyTypes) => {
                  if (techItem) {
                    return (
                      <TechUsed
                        technologyName={
                          techItem.technology_id.name
                            ? techItem.technology_id.name
                            : ''
                        }
                        id={techItem.id ? techItem.id : ''}
                        technologyMark={
                          techItem.technology_id.logo.filename_disk
                        }
                        client:only='react'
                      />
                    )
                  } else {
                    console.warn(
                      'Missing technology or logo in item:',
                      techItem,
                    )
                    return null
                  }
                })
              }
            </div>
          </div>
          <div
            class='flex flex-col items-start justify-center w-full gap-2 px-10'
          >
            {
              (link_behance ?? link_dribbble ?? link_instagram) ? (
                <>
                  <h4 class='font-mono text-xs uppercase tracking-widest text-[var(--grayA8)]'>
                    External Showcase
                  </h4>
                  <div class='flex flex-row items-center justify-start'>
                    <div class='relative flex flex-col items-center justify-start text-nowrap sm:items-start'>
                      <div class='flex flex-row items-start justify-start gap-2'>
                        {link_dribbble ? (
                          <LogoButton
                            client:only='react'
                            href={`${link_dribbble}`}
                            target='_blank'
                          >
                            <BehanceLogo className='transition-colors size-10 aspect-square z-[1]' />
                          </LogoButton>
                        ) : null}
                        {link_behance ? (
                          <LogoButton
                            client:only='react'
                            href={`${link_behance}`}
                            target='_blank'
                          >
                            <DribbbleLogo className='transition-colors size-10 aspect-square z-[1]' />
                          </LogoButton>
                        ) : null}
                        {link_instagram ? (
                          <LogoButton
                            client:only='react'
                            href={`${link_instagram}`}
                            target='_blank'
                          >
                            <InstagramLogo className='transition-colors size-10 aspect-square z-[1]' />
                          </LogoButton>
                        ) : null}
                      </div>
                    </div>
                  </div>
                </>
              ) : null
            }
          </div>
          <div
            class='flex flex-col items-start justify-center w-full gap-2 px-10 pb-10'
          >
            <h4
              class='font-mono text-xs uppercase tracking-widest text-[var(--grayA8)]'
            >
              Description
            </h4>
            <div class='flex flex-row items-center justify-start text-sm'>
              <Fragment set:html={workData?.content_block} />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
