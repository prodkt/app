---
import type { Database, Json } from '@/database.types'

import { Image } from 'astro:assets'

import Circuit from '@prodkt/assets/backgrounds/circuit.svg'
import { BlogPost } from '@prodkt/ui/prodkt-components/blog-post'

import DocsAside from '@/components/docs-aside.astro'
// import { DocsShadow } from '@prodkt/ui/prodkt-components/docs-aside/docs-shadow'

import Layout from '@/layouts/PublicLayout.astro'
import { formatDate } from '@/utils/formatDate'

import PageHeader from '../../components/page-header.astro'
import { GET } from './index.json'

type Documentation = Database['public']['Tables']['documentation']['Row']

// interface DocBlock {
//   block_subheading: string
//   block_content: string
//   codeblock_filename?: string
//   codeblock?: string | null
// }

// interface DocGroupItem {
//   id: string
//   status: string
//   sort: any // Adjust type based on your data
//   user_created: string
//   date_created: string
//   user_updated: string
//   date_updated: string
//   group: {
//     page: {
//       id: string
//       slug: string
//       sort: any // Adjust type based on your data
//       title: string
//       status: string
//       date_created: string
//       date_updated: string | null
//       user_created: string
//       user_updated: string | null
//     }
//     title: string
//   }
//   title: string
//   anchor_slug: string
//   block: DocBlock[]
//   group_codeblocks: boolean
// }

interface DocContent {
  block: Documentation['block']
  block_content: Documentation['block'] | Json | string[] | Json[]
}

const response = await GET()
const data = await response.json()

// @ts-ignore
const { documentationData } = data
---

<Layout>
  <div
    class='relative min-h-full w-full h-full flex flex-col items-center justify-start top-0'
  >
    <PageHeader
      minimal
      text='Docs'
      bullet1=''
      bullet2=''
      bullet3=''
      bullet4=''
    />

    <BlogPost
      size='noTopPadding'
      title={documentationData[0].title as string}
      previousText='Back to blog'
      backLink='/blog'
      date={formatDate(`${documentationData[0].date_created}`)}
      alt={documentationData[0].title}
      hideToc
      client:only='react'
    >
      {
        documentationData.map((item: DocContent, index: number) => (
          <Fragment key={index} set:html={item?.block_content} />
        ))
      }
    </BlogPost>
    <DocsAside />

    <Image
      src={Circuit}
      class='absolute size-full max-w-full mix-blend-color-dodge left-0 top-0 right-0 z-[-1]'
      alt=''
    />
  </div>
</Layout>
