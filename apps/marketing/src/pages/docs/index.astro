---
import type { Database } from '@/database.types'

import { Image } from 'astro:assets'

import Circuit from '@prodkt/assets/backgrounds/circuit.svg'
import { Card } from '@prodkt/ui/prodkt-components/card'

import DocsAside from '@/components/docs-aside.astro'
// import { DocsShadow } from '@prodkt/ui/prodkt-components/docs-aside/docs-shadow'

import Layout from '@/layouts/PublicLayout.astro'
import { formatDate } from '@/utils/formatDate'

import PageHeader from '../../components/page-header.astro'
import { GET } from './index.json'

type Documentation = Database['public']['Tables']['documentation']['Row'] & {
  group: DocumentationGroup
  documentationPages: DocumentationPage[]
}

type DocumentationPage =
  Database['public']['Tables']['documentation_page']['Row'] & {
    image: {
      filename_disk: Database['public']['Tables']['directus_files']['Row']['filename_disk']
    }
  }

type DocumentationGroup =
  Database['public']['Tables']['docummentation_group']['Row'] & {
    page: DocumentationPage
  }

// interface DocTypes {
//   documentationData: DocumentationGroup
// }

const response = await GET(Astro)
const data = await response.json()

// @ts-ignore
const { documentationData } = data as Documentation
const { documentationPages } = data as Documentation
const sortedPages = [...documentationPages].sort(
  (a, b) => (a.sort ?? 0) - (b.sort ?? 0),
)
---

<Layout>
  <div
    class='flex flex-col items-stretch justify-stretch px-6 gap-6 sm:px-12 lg:px-16 lg:gap-12 py-20 sm:py-24'
  >
    <div
      class='flex flex-col items-stretch w-full place-items-stretch gap-6 lg:gap-12 place-content-stretch xl:pl-[21.5rem] justify-stretch'
    >
      <PageHeader minimal fullWidth text='Docs' />
      <div
        class='grid items-stretch grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 -space-x-px justify-stretch'
      >
        {
          sortedPages.length > 0 ? (
            sortedPages.map((item: DocumentationPage) => (
              <Card
                client:only='react'
                className='col-span-1 h-full'
                key={item.id}
                image={
                  item.image?.filename_disk
                    ? item.image?.filename_disk
                    : `42f3d79d-1a22-4f70-acf0-91e2883d5d04.avif`
                }
                alt='test'
                link={`/docs/${item.slug}`}
                title={item.title || 'Untitled'}
                excerpt={item.title || 'No description available'}
                date={formatDate(item.date_updated) || 'Date not available'}
              />
            ))
          ) : (
            <p>Loading...</p>
          )
        }
      </div>
    </div>

    <DocsAside />

    <Image
      src={Circuit}
      class='absolute size-full max-w-full mix-blend-color-dodge left-0 top-0 right-0 z-[-1]'
      alt=''
    />
  </div>
</Layout>
