---
import { Theme } from '@radix-ui/themes'
import { ViewTransitions } from 'astro:transitions'
import { ThemeProvider } from 'next-themes'

import BaseHead from '@/components/BaseHead.astro'

type Appearance = 'inherit' | 'light' | 'dark'
type AccentColor =
  | 'gray'
  | 'gold'
  | 'bronze'
  | 'brown'
  | 'yellow'
  | 'amber'
  | 'orange'
  | 'tomato'
  | 'red'
  | 'ruby'
  | 'crimson'
  | 'pink'
  | 'plum'
  | 'purple'
  | 'violet'
  | 'iris'
  | 'indigo'
  | 'blue'
  | 'cyan'
  | 'teal'
  | 'jade'
  | 'green'
  | 'grass'
  | 'lime'
  | 'mint'
  | 'sky'
type GrayColor = 'auto' | 'gray' | 'mauve' | 'slate' | 'sage' | 'olive' | 'sand'

interface ThemeOptions {
  appearance: Appearance
  accentColor: AccentColor
  grayColor: GrayColor
}

interface Props {
  accentColor?: ThemeOptions['accentColor'] &
    React.RefAttributes<HTMLDivElement>
  grayColor?: ThemeOptions['grayColor'] & React.RefAttributes<HTMLDivElement>
  appearance?: ThemeOptions['appearance'] & React.RefAttributes<HTMLDivElement>
}

const {
  accentColor = 'violet',
  grayColor = 'mauve',
  appearance = 'dark',
} = Astro.props
---

<!doctype html>
<html
  lang='en'
  class='radix-themes'
  data-is-root-theme='true'
  data-accent-color={accentColor}
  data-gray-color={grayColor}
  data-has-background='false'
  data-panel-background='translucent'
  data-radius='large'
  data-scaling='100%'
>
  <head>
    <BaseHead />
    <ViewTransitions />
  </head>
  <body
    class='w-full h-screen relative overflow-x-hidden overflow-y-hidden scroll-m-0 scroll-p-0 m-0 bg-[var(--gray12)]'
  >
    <div
      class='relative flex flex-col items-center justify-center rounded-3xl w-full z-[0] bg-[var(--gray12)] dark:bg-[var(--gray1)] overflow-hidden border border-[var(--grayA6)] dark:border-[var(--gray5)]'
    >
      <ThemeProvider attribute='class' client:only='react'>
        <Theme
          !hasBackground
          asChild
          accentColor={accentColor}
          appearance={appearance}
          panelBackground='translucent'
          grayColor={grayColor}
          radius='large'
          scaling='100%'
          client:only='react'
        >
          <div
            class='relative bottom-0 mb-0 mt-auto top-auto h-auto min-h-[calc(100%_-_0px)] w-full z-[0] bg-[var(--gray1)] dark:bg-[var(--gray2)] overflow-x-hidden overflow-y-auto scrollbarGutter-stable'
          >
            <slot />
            <slot name='codeRender' />
          </div>
        </Theme>
      </ThemeProvider>
    </div>
  </body>
</html>
