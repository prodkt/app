@import '@xyflow/react/dist/base.css';

:root {
  --edge-stroke-default: var(--gray9);
  --edge-stroke-width-default: 10;
  --edge-stroke-selected-default: #555;
  --connectionline-stroke-default: #b1b1b7;
  --connectionline-stroke-width-default: 1;
  --attribution-background-color-default: rgba(255, 255, 255, 0.5);
  --minimap-background-color-default: #fff;
  --background-pattern-dot-color-default: #91919a;
  --background-pattern-line-color-default: #eee;
  --background-pattern-cross-color-default: #e2e2e2;
  --node-color-default: inherit;
  --node-border-default: 1px solid green;
  --node-background-color-default: #fff;
  --node-group-background-color-default: rgba(240, 240, 240, 0.25);
  --node-boxshadow-hover-default: 0 1px 4px 1px rgba(0, 0, 0, 0.08);
  --node-boxshadow-selected-default: 0 0 0 0.5px #1a192b;
  --handle-background-color-default: #1a192b;
  --handle-border-color-default: red;
  --selection-background-color-default: rgba(0, 89, 220, 0.08);
  --selection-border-default: 1px dotted rgba(0, 89, 220, 0.8);
  --controls-button-background-color-default: #fefefe;
  --controls-button-background-color-hover-default: #f4f4f4;
  --controls-button-color-default: inherit;
  --controls-button-color-hover-default: inherit;
  --controls-button-border-color-default: #eee;
  --controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);
}

/* The outermost container */
.react-flow {
}
/* The inner container */
.react-flow__renderer {
}
/* Zoom & pan pane */
.react-flow__zoompane {
}
/* Selection pane */
.react-flow__selectionpane {
}
/* User selection */
.react-flow__selection {
}
/* The element containing all edges in the flow */
.react-flow__edges {
}
/* Applied to each Edge in the flow */
.react-flow__edge {
}

/* The SVG <path /> element of an Edge */
.react-flow__edge-path {
  stroke: url(#edge-gradient);
  stroke-linecap: round;
  stroke-width: 1.5;
  stroke-dasharray: 1 3;
  stroke-linejoin: round;
  marker-end: none;
}

.react-flow__edge .react-flow__edge-path {
  stroke-opacity: 0.75;
}

.react-flow__edgelabel-renderer button {
  @apply size-6 flex items-center content-center place-content-center place-items-center pb-0.5 justify-center leading-[100%] rounded-full bg-radial-gradient from-[var(--grayA6)] backdrop-blur-[2px] to-[var(--grayA1)] text-lg text-[var(--ghost-a12)];
  border: 0px solid transparent;
}
/* The SVG <text /> element of an Edge label */
.react-flow__edge-text {
}
/* The SVG <text /> element behind an Edge label */
.react-flow__edge-textbg {
}
/* Applied to the current connection line */
.react-flow__connection {
  /* @apply bg-gradient-to-t from-[var(--gray12)] to-[var(--gray1)]; */
}
/* The SVG <path /> of a connection line */
.react-flow__connection-path {
}
/* The element containing all nodes in the flow */
.react-flow__nodes {
}
/* Applied to each Node in the flow */
.react-flow__node {
  @apply bg-[var(--gray1)] backdrop-blur border-[var(--grayA4)] rounded-2xl px-8 py-4;
  @apply drop-shadow-2xl shadow-[var(--grayA2)];

  & .selected {
  }
}
/* .selected	Added to a Node when selected. */
.react-flow__node {
  @apply after:bg-gradient-to-br after:from-[var(--grayA1)] after:to-[var(--ghost-aa4)] after:blur-3xl after:w-full after:h-full after:top-0 after:bottom-0 after:left-0 after:right-0 after:z-[10] after:absolute;
}
/* Added when Node type is "default" */
.react-flow__node-default {
}
/* Added when Node type is "input" */
.react-flow__node-input {
}
/* Added when Node type is "output" */
.react-flow__node-output {
}
/* Nodes selection */
.react-flow__nodesselection {
}
/* Nodes selection rect */
.react-flow__nodesselection-rect {
}
/* Applied to each <Handle /> component */
.react-flow__handle {
  @apply size-4 bg-[var(--grayA9)] border border-[var(--grayA12)] rounded-full shadow-[var(--ghost-aa12)] shadow-xl ring-1 ring-inset ring-[var(--grayA9)];
  @apply transition-all ease-in-out duration-500;
}

.react-flow__handle.source {
  right: -20px;
}

.react-flow__handle.target {
  left: -20px;
}

.react-flow__node:focus {
}

/* Applied when a handle's Position is set to "top" */
.react-flow__handle-top {
}
/* Applied when a handle's Position is set to "right" */
.react-flow__handle-right {
  /* @apply right-[-12px]; */
}
/* Applied when a handle's Position is set to "bottom" */
.react-flow__handle-bottom {
}
/* Applied when a handle's Position is set to "left" */
.react-flow__handle-left {
  /* @apply left-[-12px]; */
}
/* Added to a Handle when a connection line is above a handle. */
.connectingfrom {
  @apply size-8 transition-all ease-in-out duration-1000;
}
/* Added to a Handle when a connection line is above a handle. */
.connectingto {
  @apply size-8 transition-all ease-in-out duration-1000;
}
/*  */
.valid {
}
/* Applied to the <Background /> component */
.react-flow__background {
  @apply bg-gradient-to-br from-[var(--gray6)] to-[var(--gray5)] dark:from-[var(--gray2)] dark:to-[var(--gray1)];
}
/* Applied to the <MiniMap /> component */
.react-flow__minimap {
  @apply bg-[var(--ghost-aa7)] rounded-2xl border border-[var(--grayA3)] overflow-clip backdrop-blur before:opacity-0 after:opacity-0;
}
/* Applied to the <Controls /> component */
.react-flow__controls {
  @apply bg-[var(--gray1)] text-[var(--grayA10)] shadow-xl rounded-lg shadow-[var(--grayA1)] ring-1 ring-[var(--grayA3)] border-[var(--grayA3)] border;
}

.react-flow__panel {
  @apply bg-[var(--ghost-aa8)] dark:bg-[var(--grayA3)] ring-1 ring-[var(--grayA2)] backdrop-blur border-none;
}

.react-flow__attribution {
  visibility: hidden;
  display: none;
}

.react-flow__minimap::before {
  @apply bg-[var(--gray1)];
}

.react-flow__minimap-mask {
  @apply bg-[var(--grayA1)] opacity-0;
}

.react-flow__minimap-node {
  @apply fill-[var(--gray9)] rounded-full border-none transition-all ease-in-out duration-1000 contrast-200 opacity-100;
}
